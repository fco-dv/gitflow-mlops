name: ML Pipeline Deployment

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  deploy-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [feature-branch, preprod, prod]
    environment:
      name: ${{ matrix.environment == 'feature-branch' && format('staging-feature-{0}', github.head_ref) || matrix.environment }}
      url: ${{ matrix.environment == 'feature-branch' && 'https://staging-feature.example.com' || matrix.environment == 'preprod' && 'https://preprod.example.com' || 'https://production.example.com' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.environment == 'feature-branch' && github.head_ref || github.ref_name }}
      - name: Set Environment Variable
        run: echo "ENVIRONMENT=${{ matrix.environment }}" >> $GITHUB_ENV
      - name: Build Docker Image
        run: |
          docker build --build-arg ENVIRONMENT=${{ env.ENVIRONMENT }} -t my-ml-app:${{ matrix.environment == 'feature-branch' && github.sha || github.ref_name }}-${{ matrix.environment }} .
      - name: Simulate Deployment
        run: |
          echo "Simulating deployment to ${{ matrix.environment }}"
          echo "Model 'deployed' to ${{ matrix.environment }}"
          echo "Docker Image: my-ml-app:${{ matrix.environment == 'feature-branch' && github.sha || github.ref_name }}-${{ matrix.environment }}"

  ephemeral-deploy:
    name: Ephemeral Feature Deploy
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/deploy-ml-pipeline.yml
    with:
      environment: feature-branch

  preprod-deploy:
    name: Preprod/Latest Deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: []
    concurrency:
      group: preprod-prod-deploy
      cancel-in-progress: true
    uses: ./.github/workflows/deploy-ml-pipeline.yml
    with:
      environment: preprod

  prod-deploy:
    name: Production Deploy
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: []
    concurrency:
      group: preprod-prod-deploy
      cancel-in-progress: true
    uses: ./.github/workflows/deploy-ml-pipeline.yml
    with:
      environment: prod
